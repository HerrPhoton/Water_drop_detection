name: Python package

# Этот блок отвечает за то, что при каждом push и pull-request
# на ветку master запускается тестирование 
on: 
  push:
    branches:
      - master
  pull_request:
     branches:
      - master
# Это блоки работы, то есть здесь мы можем хоть как назвать блко( например, тут это
# build-windows) и выбирать виртуальную машину для прогона ( в моем случае это windows-latest)
# а дальше по шагам прогоняем все, что нам необходимо
jobs:
  build-windows:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Check out source repository # Название шага, который будет отображаться при прогоне
        uses: actions/checkout@v3
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: Test with pytest # По идеи, здесь мы можем проверят правильность кода, то есть статистический анализ
        run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
     # - name: Run Test's Здесь мы будем прогонять наши тесты, которые мы ждем от Санечки
      #  run: |
          # python src/test...... ну тут путь к файлу с тестами
